<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gd774.effic.mapper.MsgMapper">
  <resultMap type="com.gd774.effic.dto.MsgDto" id="MsgMap">
	<result  property="msgId"          column="MSG_ID"/>
	<result  property="sender"     column="SENDER"/>
	<result  property="title"         column="TITLE"/>
    <result  property="contents"        column="CONTENTS"/>
	<result  property="sendDt"        column="SEND_DT"/>
	<result  property="state"        column="STATE"/>
	<result  property="isDelete"        column="IS_DELETE"/>
	<result  property="chkImpt"        column="CHK_IMPT"/>
	<result  property="originalName"        column="ORIGINAL_NAME"/>
	<result  property="recpId"        column="RECP_ID"/>
	<result  property="recipient"        column="RECIPIENT"/>
	<result  property="sort"        column="SORT"/>
	<result  property="readDt"        column="READ_DT"/>
	<result  property="sname"        column="SNAME"/>
	<result  property="rname"        column="RNAME"/>
  </resultMap>


<insert id="insertMsg"
        parameterType="MsgDto">
  <selectKey order="BEFORE" keyProperty="msgId" resultType="int">
	SELECT MSG_SEQ.NEXTVAL
	  FROM DUAL
  </selectKey>
INSERT INTO MSG_T(
     MSG_ID
   , SENDER
   , TITLE
   , CONTENTS
   , SEND_DT
   , STATE
   , IS_DELETE
   , CHK_IMPT
 ) VALUES (
     #{msgId}
   , #{sender}  
   , #{title}  
   , #{contents}
   , SYSDATE
   , 0
   , 0
   , 0  
 ) 
</insert>

<insert id="insertRecp"
        parameterType="RecpDto">
INSERT INTO RECP_T(
     RECP_ID
   , MSG_ID
   , RECIPIENT
   , STATE
   , CHK_IMPT
 ) VALUES (
     RECP_SEQ.NEXTVAL
   , #{msgId}  
   , #{recipient}
   , 0
   , 0  
 ) 
</insert>



<insert id="insertAttach"
        parameterType="MsgAttachDto">
 INSERT INTO MSG_ATTACH_T (
      ATTACH_ID
    , UPLOAD_PATH
    , FILESYS_NAME
    , ORIGINAL_NAME
    , MSG_ID
  ) VALUES (
      MSG_ATTACH_SEQ.NEXTVAL
    , #{uploadPath}
    , #{filesysName}
    , #{originalName}
    , #{msgId}
  )


</insert>
  
<select id="getMsgCount">
SELECT COUNT(MSG_ID)
FROM MSG_T
WHERE SENDER = #{sender}

</select>

<select id="getListMsg"
        parameterType="Map"
        resultMap="MsgMap">
SELECT MSG_ID, RECIPIENT, TITLE, SEND_DT, CHK_IMPT, NAME
FROM (SELECT ROW_NUMBER() OVER(ORDER BY M.SEND_DT DESC) AS RN 
            , M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT, M.CHK_IMPT, U.NAME
         FROM MSG_T M 
         JOIN RECP_T R ON M.MSG_ID = R.MSG_ID
         JOIN USER_T U ON U.EMP_ID = R.RECIPIENT
        WHERE M.SENDER = #{sender} AND M.STATE=0)
WHERE RN BETWEEN #{begin} AND #{end}
</select>

<select id="getMsgDetail">
SELECT M.MSG_ID, R.RECIPIENT, M.TITLE, M.CONTENTS, M.SEND_DT, NAME
FROM MSG_T M 
JOIN RECP_T R ON R.MSG_ID = M.MSG_ID
JOIN USER_T U ON U.EMP_ID = M.SENDER 
WHERE M.MSG_ID = #{msgId}     
</select>


<!-- msgId에 따른 첨부파일들을 뽑아주는 쿼리 -->
  <select id="getMsgAttach"
          resultType="MsgAttachDto">
   SELECT  ATTACH_ID
    , UPLOAD_PATH
    , FILESYS_NAME
    , ORIGINAL_NAME
   FROM MSG_ATTACH_T
   WHERE MSG_ID = #{msgId}
  </select>
  
    <select id="getMsgOneAttach"
          resultType="MsgAttachDto">
   SELECT  ATTACH_ID
    , UPLOAD_PATH
    , FILESYS_NAME
    , ORIGINAL_NAME
   FROM MSG_ATTACH_T
   WHERE MSG_ID = #{msgId}
  </select>
  
   <select id="selectCountAttach">
   SELECT COUNT(ATTACH_ID)
   FROM MSG_ATTACH_T
   WHERE MSG_ID = #{msgId}
  </select>


<select id="getRcpCount">
SELECT COUNT(RECP_ID)
FROM RECP_T
WHERE RECIPIENT = #{recipient}
</select>


<select id="getListRcp"
        parameterType="Map"
        resultMap="MsgMap">
SELECT MSG_ID, RECIPIENT, TITLE, SEND_DT, CHK_IMPT, SENDER, READ_DT, RECP_ID, NAME
FROM (SELECT ROW_NUMBER() OVER(ORDER BY M.SEND_DT DESC) AS RN 
            , M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT, R.CHK_IMPT, M.SENDER, R.READ_DT, R.RECP_ID, U.NAME
         FROM MSG_T M 
         JOIN RECP_T R ON M.MSG_ID = R.MSG_ID
         JOIN USER_T U ON U.EMP_ID = M.SENDER 
        WHERE R.RECIPIENT = #{recipient} AND M.STATE=0)
WHERE RN BETWEEN #{begin} AND #{end}
</select>

<select id="getRcpDetail"
        parameterType="Map">
SELECT M.MSG_ID, R.RECIPIENT, M.TITLE, M.CONTENTS, M.SEND_DT, M.SENDER, R.READ_DT, U.NAME
FROM MSG_T M 
JOIN RECP_T R ON R.MSG_ID = M.MSG_ID
JOIN USER_T U ON U.EMP_ID = R.RECIPIENT 
WHERE M.MSG_ID = #{msgId} AND R.RECIPIENT = #{recipient} 
</select>

<update id="updateReadDt">
UPDATE RECP_T 
   SET READ_DT=CURRENT_DATE
 WHERE MSG_ID=#{msgId} AND RECIPIENT=#{recipient} AND READ_DT IS NULL
</update>

<update id="updateSentChkImpt">
UPDATE MSG_T 
   SET CHK_IMPT = CASE 
        WHEN CHK_IMPT = 1 THEN 0
        ELSE 1
    END
 WHERE MSG_ID=#{msgId}
</update>

<update id="updateSentOnlyChkImpt">
UPDATE MSG_T 
   SET CHK_IMPT = 1
 WHERE MSG_ID=#{msgId}
</update>

<update id="updateInboxChkImpt">
UPDATE RECP_T 
   SET CHK_IMPT = CASE 
        WHEN CHK_IMPT = 1 THEN 0
        ELSE 1
    END
 WHERE RECP_ID=#{recpId}
</update>

<select id="getImpCount"
        parameterType="Map">
SELECT COUNT(SORT)
  FROM (
         SELECT CONCAT('R',R.RECP_ID)  AS SORT, 
                M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT,  R.CHK_IMPT, M.SENDER, R.RECP_ID
           FROM MSG_T M JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
          WHERE R.RECIPIENT = #{recipient} AND R.STATE=1 AND R.CHK_IMPT=1
     UNION ALL
         SELECT  CONCAT('M', M.MSG_ID) AS SORT, 
                 M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT, M.CHK_IMPT ,M.SENDER, R.RECP_ID
           FROM MSG_T M JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
          WHERE M.SENDER = #{sender} AND M.STATE=0 AND M.CHK_IMPT=1)        
</select>


<select id="getImpList"
        parameterType="Map"
        resultMap="MsgMap">

SELECT SORT, MSG_ID, RECIPIENT, TITLE, SEND_DT, SENDER, RNAME, SNAME
  FROM (
         SELECT ROW_NUMBER() OVER(ORDER BY SEND_DT DESC) AS RN, 
                SORT, MSG_ID, RECIPIENT, TITLE, SEND_DT, CHK_IMPT, SENDER, RNAME, SNAME
  FROM (
         SELECT CONCAT('R',R.RECP_ID)  AS SORT, 
                M.MSG_ID, R.RECIPIENT, RU.NAME AS RNAME, SU.NAME AS SNAME, M.TITLE, M.SEND_DT,  R.CHK_IMPT, M.SENDER, R.RECP_ID
           FROM MSG_T M 
           JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
           JOIN USER_T SU
             ON SU.EMP_ID = M.SENDER
           JOIN USER_T RU
             ON RU.EMP_ID = R.RECIPIENT
          WHERE R.RECIPIENT = #{recipient} AND M.STATE=0 AND M.CHK_IMPT=1
     UNION ALL
         SELECT  CONCAT('M', M.MSG_ID) AS SORT, 
                 M.MSG_ID, R.RECIPIENT, RU.NAME AS RNAME, SU.NAME AS SNAME, M.TITLE, M.SEND_DT, M.CHK_IMPT ,M.SENDER, R.RECP_ID
           FROM MSG_T M 
           JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
           JOIN USER_T SU
             ON SU.EMP_ID = M.SENDER
           JOIN USER_T RU
             ON RU.EMP_ID = R.RECIPIENT
          WHERE M.SENDER =  #{sender} AND M.STATE=0 AND M.CHK_IMPT=1))
 WHERE RN BETWEEN #{begin} AND #{end}
 
</select>


<update id="updateSentTobBin">
UPDATE MSG_T 
   SET STATE = 1
 WHERE MSG_ID=#{msgId}
</update>

<update id="updateInboxToBin">
UPDATE RECP_T 
   SET STATE = 1
 WHERE RECP_ID=#{recpId}
</update>
 
 <select id="getBinList"
        parameterType="Map"
        resultMap="MsgMap">

SELECT SORT, MSG_ID, RECIPIENT, TITLE, SEND_DT, SENDER, RNAME, SNAME
  FROM (
         SELECT ROW_NUMBER() OVER(ORDER BY SEND_DT DESC) AS RN, 
                SORT, MSG_ID, RECIPIENT, TITLE, SEND_DT, CHK_IMPT, SENDER, RNAME, SNAME
  FROM (
         SELECT CONCAT('R',R.RECP_ID)  AS SORT, 
                M.MSG_ID, R.RECIPIENT, RU.NAME AS RNAME, SU.NAME AS SNAME, M.TITLE, M.SEND_DT,  R.CHK_IMPT, M.SENDER, R.RECP_ID
           FROM MSG_T M 
           JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
           JOIN USER_T SU
             ON SU.EMP_ID = M.SENDER
           JOIN USER_T RU
             ON RU.EMP_ID = R.RECIPIENT
          WHERE R.RECIPIENT = #{recipient} AND R.STATE=1
     UNION ALL
         SELECT  CONCAT('M', M.MSG_ID) AS SORT, 
                 M.MSG_ID, R.RECIPIENT, RU.NAME AS RNAME, SU.NAME AS SNAME, M.TITLE, M.SEND_DT, M.CHK_IMPT ,M.SENDER, R.RECP_ID
           FROM MSG_T M 
           JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
           JOIN USER_T SU
             ON SU.EMP_ID = M.SENDER
           JOIN USER_T RU
             ON RU.EMP_ID = R.RECIPIENT
          WHERE M.SENDER =  #{sender} AND M.STATE=1))
 WHERE RN BETWEEN #{begin} AND #{end}
</select>

<select id="getBinCount"
        parameterType="Map">

SELECT COUNT(SORT)
  FROM (
         SELECT CONCAT('R',R.RECP_ID)  AS SORT, 
                M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT,  R.CHK_IMPT, M.SENDER, R.RECP_ID
           FROM MSG_T M JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
          WHERE R.RECIPIENT = #{recipient} AND R.STATE=1
     UNION ALL
         SELECT  CONCAT('M', M.MSG_ID) AS SORT, 
                 M.MSG_ID, R.RECIPIENT, M.TITLE, M.SEND_DT, M.CHK_IMPT ,M.SENDER, R.RECP_ID
           FROM MSG_T M JOIN RECP_T R
             ON M.MSG_ID = R.MSG_ID
          WHERE M.SENDER = #{sender} AND M.STATE=1)


</select>

<select id="recipientList"
        resultMap="MsgMap">
SELECT U.NAME
  FROM MSG_T M 
  JOIN RECP_T R
    ON M.MSG_ID = R.MSG_ID
  JOIN USER_T U 
    ON U.EMP_ID = R.RECIPIENT  
 WHERE R.READ_DT IS NOT NULL AND M.MSG_ID=#{msgId}
</select>   

</mapper>
